---
- name: Define catalog path and version
  set_fact:
    catalog_path: "{{ provisionhost_registry }}/telcoci/testnetworkfunction/{{ tnf_operator_to_install.operator_name }}-disconnected-catalog"
    catalog_version: "{{ tnf_operator_to_install.operator_version }}_{{ lookup('password', '/dev/null length=16 chars=ascii_lowercase,digits') }}"

- name: Create temporary directory for ICSP
  tempfile:
    state: directory
    prefix: tnf_test_example_prerun_tmp_dir.
  register: tnf_test_example_prerun_tmp_dir

- name: Copy authentication config
  copy:
    src: "{{ partner_creds }}"
    dest: "{{ tnf_test_example_prerun_tmp_dir.path }}/config.json"

- name: "Create FBC catalog"
  include_role:
    name: fbc-catalog
    apply:
      environment:
        - DOCKER_CONFIG: "{{ tnf_test_example_prerun_tmp_dir.path }}"
  vars:
    fbc_index_image:  "{{ catalog_path }}:{{ catalog_version }}"
    fbc_bundles:
      - "{{ tnf_operator_to_install.operator_bundle }}"
    fbc_opm_args: "--skip-tls-verify=false"

- name: Push catalog image into local registry
  shell: |
    podman push --authfile {{ pullsecret_tmp_file }} \
    {{ catalog_path }}:{{ catalog_version }}

- name: Manage imageContentSourcePolicy update
  block:
    - name: "Get catalog SHA256"
      shell:
        cmd: |
          skopeo inspect --authfile {{ pullsecret_tmp_file }} \
          docker://{{ catalog_path }}:{{ catalog_version }} | jq -r '.Digest'
      register: catalog_sha
      retries: 5
      delay: 5
      until:
        - catalog_sha is not failed

    - name: Mirror images and save manifests into a temporary directory
      shell: |
        {{ oc_tool_path }} adm catalog mirror -a {{ pullsecret_tmp_file }} \
        {{ catalog_path }}@{{ catalog_sha.stdout }} \
        {{ provisionhost_registry }} \
        --to-manifests={{ tnf_test_example_prerun_tmp_dir.path }}/tmp_oc
      register: catalog_mirror
      retries: 2
      delay: 10
      until: catalog_mirror.stderr.find('error:') == -1

    - name: "Remove local catalog image"
      shell: |
        podman rmi "{{ catalog_path }}:{{ catalog_version }}"

    - name: Re-define catalog path + sha
      set_fact:
        catalog_path: "{{ catalog_path }}@{{ catalog_sha.stdout }}"

    - name: Apply ImageContentSourcePolicy
      community.kubernetes.k8s:
        definition: "{{ lookup('file', tnf_test_example_prerun_tmp_dir.path + '/tmp_oc/imageContentSourcePolicy.yaml') }}"

    - name: Remove temporary directory
      file:
        path: "{{ tnf_test_example_prerun_tmp_dir.path }}"
        state: absent

    # kubeconfig and oc are referenced by dci_cluster_configs_dir variable on
    # dci-openshift-agent, and both are saved under kubeconfig_path (removing "/kubeconfig")
    - name: Wait for MCP status
      include_role:
        name: check-resource
      vars:
        resource_to_check: "MachineConfigPool"
        check_wait_retries: 60
        check_wait_delay: 60
        check_reason: "TNF test example"
...
