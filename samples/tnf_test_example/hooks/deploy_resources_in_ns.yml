---
# If the namespace is already present, the existing object will be patched if its attributes
# differ from those specified using resource_definition or src, according to Ansible docs.
- name: Create namespace
  community.kubernetes.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ app_ns }}"
    state: present

- name: Create ResourceQuotas for namespace
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('template', 'templates/resource_quota.yml.j2') | from_yaml }}"

- name: Create local volumes
  include_tasks: create_local_volumes.yml
  loop:
    - "{{ app_ns }}-test-0"
    - "{{ app_ns }}-test-1"
  loop_control:
    loop_var: volume_name_suffix

- name: Create a StatefulSet with 2 replicas of the testing pod
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('template', 'templates/test_statefulset.yml.j2') | from_yaml }}"

- name: Wait until all test pods are running
  community.kubernetes.k8s_info:
    namespace: "{{ app_ns }}"
    kind: Pod
    label_selectors:
      - app=test
  register: test_result
  retries: 60
  delay: 5
  until:
    - "test_result.resources|length == 2"
    - "'status' in test_result.resources[0]"
    - "'phase' in test_result.resources[0].status"
    - "test_result.resources[0].status.phase == 'Running'"
    - "'status' in test_result.resources[1]"
    - "'phase' in test_result.resources[1].status"
    - "test_result.resources[1].status.phase == 'Running'"

- name: Wait until PVCs move to Bound status
  community.kubernetes.k8s_info:
    namespace: "{{ app_ns }}"
    kind: PersistentVolumeClaim
  register: pvc_check
  retries: 6
  delay: 10
  until:
    - "pvc_check.resources|length == 2"
    - "'status' in pvc_check.resources[0]"
    - "'phase' in pvc_check.resources[0].status"
    - "pvc_check.resources[0].status.phase == 'Bound'"
    - "'status' in pvc_check.resources[1]"
    - "'phase' in pvc_check.resources[1].status"
    - "pvc_check.resources[1].status.phase == 'Bound'"

- name: Create NetworkPolicies for the pods deployed to deny traffic by default
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('template', 'templates/network_policies_deny_traffic.yml.j2') | from_yaml }}"

- name: Create CRD under test
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('template', 'templates/test_crd.yml.j2') | from_yaml }}"
  when: pods_in_same_ns.target_crds|length
  loop: "{{ pods_in_same_ns.target_crds }}"
  loop_control:
    loop_var: target_crd

- name: Create PodDisruptionBudget for the pods deployed
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('template', 'templates/pod_disruption_budget.yml.j2') | from_yaml }}"
