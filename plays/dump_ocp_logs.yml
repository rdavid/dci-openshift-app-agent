---

- block:
  # If cnf-cert role is used with multiple namespaces, there may be more than one namespace
  # from which logs must be retrieved
  - name: Get OCP logs from namespaces
    block:
    # tnf_config is defined in cnf-cert and it may contain dci_openshift_app_ns
    # If no tnf_config is provided externally, ns_list will not be generated here
    - name: Obtain namespaces from tnf_config variable if exists (excepting dci_openshift_app_ns if provided)
      set_fact:
        ns_list: "{{ ns_list|default([]) + [ item.namespace ] }}"
      when:
        - tnf_config | default('') | length
        - item.namespace | default('') | length
        - item.namespace != dci_openshift_app_ns
      loop: "{{ tnf_config }}"

    # This appends dci_openshift_app_ns to ns_list (which is empty if tnf_config is not
    # provided externally)
    - name: Append dci_openshift_app_ns to the list
      set_fact:
        ns_list: "{{ ns_list|default([]) + [ dci_openshift_app_ns ] }}"

    - name: Get OCP logs from namespace
      include_role:
        name: get-logs-from-namespace
      vars:
        get_logs_folder: "{{ job_logs.path }}"
      loop: "{{ ns_list }}"
      loop_control:
        loop_var: get_logs_ns

  - name: Get logs from OCP deployment
    environment:
      - DCI_MUST_GATHER_IMAGES: '{{ dci_must_gather_images | default(["registry.redhat.io/openshift4/ose-must-gather"]) | join(" ") }}'
    script: ./scripts/get-logs "{{ provisioner_user }}@{{ provisioner_name }}" "{{ job_logs.path }}"
    delegate_to: localhost
    when:
      - provisioner_user | default('') | length
      - provisioner_name | default('') | length
  ignore_errors: true

...
